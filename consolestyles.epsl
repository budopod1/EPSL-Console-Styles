$import colorizecheck;

TextStyle {
    Str:code
}

Bool#should colorize output {
    return should_colorize;
}

#force enable colorization {
    override_should_colorize[true];
}

#force disable colorization {
    override_should_colorize[false];
}

#reset colorization {
    reset_should_colorize;
}

Str#style [Str:text] with [TextStyle:style] {
    if (!should_colorize) {
        return text;
    };
    return "{}{}\e[0m" % style.code % text;
}

Str#style [Str:text] with [[TextStyle]:styles] {
    if (!should_colorize) {
        return text;
    };
    Str:result = [""].clone;
    for (TextStyle:style in styles) {
        [result].extend[style.code];
    };
    [result].extend[text];
    [result].extend["\e[0m"];
    return result;
}

// these functions were autogenerated from the tables at
// https://github.com/termcolor/termcolor/blob/8e1621bc6907e45f9e15b52c9c7e2b04e6193084/src/termcolor/termcolor.py

TextStyle#TXT_BOLD {
    return TextStyle ["\e[1m"];
}

TextStyle#TXT_DARK {
    return TextStyle ["\e[2m"];
}

TextStyle#TXT_UNDERLINE {
    return TextStyle ["\e[4m"];
}

TextStyle#TXT_BLINK {
    return TextStyle ["\e[5m"];
}

TextStyle#TXT_REVERSE {
    return TextStyle ["\e[7m"];
}

TextStyle#TXT_CONCEALED {
    return TextStyle ["\e[8m"];
}

TextStyle#TXT_STRIKE {
    return TextStyle ["\e[9m"];
}

TextStyle#TXT_ON_BLACK {
    return TextStyle ["\e[40m"];
}

TextStyle#TXT_ON_RED {
    return TextStyle ["\e[41m"];
}

TextStyle#TXT_ON_GREEN {
    return TextStyle ["\e[42m"];
}

TextStyle#TXT_ON_YELLOW {
    return TextStyle ["\e[43m"];
}

TextStyle#TXT_ON_BLUE {
    return TextStyle ["\e[44m"];
}

TextStyle#TXT_ON_MAGENTA {
    return TextStyle ["\e[45m"];
}

TextStyle#TXT_ON_CYAN {
    return TextStyle ["\e[46m"];
}

TextStyle#TXT_ON_LIGHT_GREY {
    return TextStyle ["\e[47m"];
}

TextStyle#TXT_ON_DARK_GREY {
    return TextStyle ["\e[100m"];
}

TextStyle#TXT_ON_LIGHT_RED {
    return TextStyle ["\e[101m"];
}

TextStyle#TXT_ON_LIGHT_GREEN {
    return TextStyle ["\e[102m"];
}

TextStyle#TXT_ON_LIGHT_YELLOW {
    return TextStyle ["\e[103m"];
}

TextStyle#TXT_ON_LIGHT_BLUE {
    return TextStyle ["\e[104m"];
}

TextStyle#TXT_ON_LIGHT_MAGENTA {
    return TextStyle ["\e[105m"];
}

TextStyle#TXT_ON_LIGHT_CYAN {
    return TextStyle ["\e[106m"];
}

TextStyle#TXT_ON_WHITE {
    return TextStyle ["\e[107m"];
}

TextStyle#TXT_BLACK {
    return TextStyle ["\e[30m"];
}

TextStyle#TXT_RED {
    return TextStyle ["\e[31m"];
}

TextStyle#TXT_GREEN {
    return TextStyle ["\e[32m"];
}

TextStyle#TXT_YELLOW {
    return TextStyle ["\e[33m"];
}

TextStyle#TXT_BLUE {
    return TextStyle ["\e[34m"];
}

TextStyle#TXT_MAGENTA {
    return TextStyle ["\e[35m"];
}

TextStyle#TXT_CYAN {
    return TextStyle ["\e[36m"];
}

TextStyle#TXT_LIGHT_GREY {
    return TextStyle ["\e[37m"];
}

TextStyle#TXT_DARK_GREY {
    return TextStyle ["\e[90m"];
}

TextStyle#TXT_LIGHT_RED {
    return TextStyle ["\e[91m"];
}

TextStyle#TXT_LIGHT_GREEN {
    return TextStyle ["\e[92m"];
}

TextStyle#TXT_LIGHT_YELLOW {
    return TextStyle ["\e[93m"];
}

TextStyle#TXT_LIGHT_BLUE {
    return TextStyle ["\e[94m"];
}

TextStyle#TXT_LIGHT_MAGENTA {
    return TextStyle ["\e[95m"];
}

TextStyle#TXT_LIGHT_CYAN {
    return TextStyle ["\e[96m"];
}

TextStyle#TXT_WHITE {
    return TextStyle ["\e[97m"];
}

TextStyle#TXT_ON_RGB [W8:r], [W8:g], [W8:b] {
    return TextStyle ["\e[48;2;{};{};{}m" % r % g % b];
}

TextStyle#TXT_RGB [W8:r], [W8:g], [W8:b] {
    return TextStyle ["\e[38;2;{};{};{}m" % r % g % b];
}
